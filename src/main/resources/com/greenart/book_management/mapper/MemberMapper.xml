<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.greenart.book_management.mapper.MemberMapper">
    <insert id="addMemberInfo">
    INSERT INTO book_db.member_info
    (mi_bi_seq, mi_name, mi_birth, mi_pwd, mi_phone_num, mi_email, mi_status)
    VALUES(#{mi_bi_seq}, #{mi_name}, #{mi_birth}, #{mi_pwd}, #{mi_phone_num}, #{mi_email}, #{mi_status})
    </insert>
    <select id="getMemberList" resultType="com.greenart.book_management.data.MemberVO">
        select mi_seq, book_title, mi_name, mi_birth, mi_phone_num, mi_email, mi_reg_dt, mi_mod_dt, mi_status from
        (
            select a.*, b.bi_title as book_title
            from member_info a left outer join book_info b
            on a.mi_bi_seq = b.bi_seq
        ) c
        <if test="type == 'title'">
            where book_title like #{keyword}
        </if>
        <if test="type == 'name'">
            where mi_name like #{keyword}
        </if>
        order by mi_seq desc
        limit 10 offset #{offset}
    </select>
        <select id="getMemberCnt" resultType="java.lang.Integer">
        select count(*) from (
            select a.*, b.bi_title as book_title
            from member_info a left outer join book_info b
            on a.mi_bi_seq = b.bi_seq
        ) c
        <if test="type == 'title'">
            where book_title like #{keyword}
        </if>
        <if test="type == 'name'">
            where mi_name like #{keyword}
        </if>
    </select>
    <delete id="deleteMemberInfo">
        delete from member_info where mi_seq = #{seq}
    </delete>
    <select id="isExistMember" resultType="java.lang.Integer">
        select count(*) from member_info where mi_seq = #{seq}
    </select>
    <select id="getMemberInfoBySeq" resultType="com.greenart.book_management.data.MemberVO">
        select 
            mi_seq, mi_bi_seq, mi_name, mi_birth, 
            mi_phone_num, mi_email, mi_status, bi_title as book_title
        from 
            member_info a left outer join book_info b 
        on
            a.mi_bi_seq = b.bi_seq
        where mi_seq = #{seq}
    </select>
    <update id="updateMemberInfo">
        update member_info set
            mi_bi_seq = #{mi_bi_seq}, mi_name = #{mi_name}, mi_birth = #{mi_birth},
            mi_phone_num = #{mi_phone_num}, mi_email = #{mi_email}, mi_status = #{mi_status}, mi_mod_dt = NOW()
        where mi_seq = #{mi_seq}
    </update>
    <insert id="insertMemberHistory">
        INSERT INTO member_info_history
        (mih_bi_seq, mih_type, mih_content)
        VALUES
        (#{mih_bi_seq}, #{mih_type}, #{mih_content})
    </insert>
    <select id="getRecentAddedMemberSeq" resultType="java.lang.Integer">
        select mi_seq from member_info order by mi_seq desc limit 1
    </select>
</mapper>